@@ -1,13 +1,41 @@
 # Frequency Finder
 # https://www.nostarch.com/crackingcodes (BSD Licensed)
 
-ETAOIN = 'ETAOINSHRDLCUMWFGYPBVKJXQZ'
-LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+ETAOIN = "ETAOINSHRDLCUMWFGYPBVKJXQZ"
+LETTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
+
 
 def getLetterCount(message):
     # Returns a dictionary with keys of single letters and values of the
     # count of how many times they appear in the message parameter:
-    letterCount = {'A': 0, 'B': 0, 'C': 0, 'D': 0, 'E': 0, 'F': 0, 'G': 0, 'H': 0, 'I': 0, 'J': 0, 'K': 0, 'L': 0, 'M': 0, 'N': 0, 'O': 0, 'P': 0, 'Q': 0, 'R': 0, 'S': 0, 'T': 0, 'U': 0, 'V': 0, 'W': 0, 'X': 0, 'Y': 0, 'Z': 0}
+    letterCount = {
+        "A": 0,
+        "B": 0,
+        "C": 0,
+        "D": 0,
+        "E": 0,
+        "F": 0,
+        "G": 0,
+        "H": 0,
+        "I": 0,
+        "J": 0,
+        "K": 0,
+        "L": 0,
+        "M": 0,
+        "N": 0,
+        "O": 0,
+        "P": 0,
+        "Q": 0,
+        "R": 0,
+        "S": 0,
+        "T": 0,
+        "U": 0,
+        "V": 0,
+        "W": 0,
+        "X": 0,
+        "Y": 0,
+        "Z": 0,
+    }
 
     for letter in message.upper():
         if letter in LETTERS:
@@ -40,7 +68,7 @@ def getFrequencyOrder(message):
     # convert it to a string:
     for freq in freqToLetter:
         freqToLetter[freq].sort(key=ETAOIN.find, reverse=True)
-        freqToLetter[freq] = ''.join(freqToLetter[freq])
+        freqToLetter[freq] = "".join(freqToLetter[freq])
 
     # Fourth, convert the freqToLetter dictionary to a list of
     # tuple pairs (key, value), then sort them:
@@ -53,7 +81,7 @@ def getFrequencyOrder(message):
     for freqPair in freqPairs:
         freqOrder.append(freqPair[1])
 
-    return ''.join(freqOrder)
+    return "".join(freqOrder)
 
 
 def englishFreqMatchScore(message):
@@ -74,4 +102,4 @@ def englishFreqMatchScore(message):
         if uncommonLetter in freqOrder[-6:]:
             matchScore += 1
 
-    return matchScore
\ No newline at end of file
+    return matchScore
