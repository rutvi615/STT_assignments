@@ -111,6 +111,14 @@ def test_XandY():
     assert res.lower() == answer_str.lower()
 
 
+def leet():
+    res = decrypt(
+        Config().library_default().complete_config(),
+        "|-|3770 my nam3 is 833 and 1 lIke D06 AND 4|>|>13 4 7R33",
+    )
+    assert res.lower() == answer_str
+
+
 def test_new_line_strip_and_return():
     # Language Checker should return True by stripping new line
     # but the new line should be returned to the user as new lines are important
@@ -132,30 +140,45 @@ def test_base58_normal():
         Config().library_default().complete_config(),
         "6qYhNwsP46Mn4gy6gyANfsMm2icAxGFA6gnFjVm9phYHeby7PZm3vthiXxSU77teQgTFGbHETn",
     )
-    # res = res.decode("utf-8")
     assert res.lower() == answer_str.lower()
 
 
-@pytest.mark.skip(reason="This test appears to run infinitely.")
+def test_base58_ripple():
+    res = decrypt(
+        Config().library_default().complete_config(),
+        "aqY64A1PhaM8hgyagyw4C1Mmp5cwxGEwag8EjVm9F6YHebyfPZmsvt65XxS7ffteQgTEGbHNT8",
+    )
+    assert res.lower() == answer_str.lower()
+
+
 def test_base62():
     res = decrypt(
-        Config().library_default().complete_config(), ".3vQº·îP=.ã.ÿîÌ¤U¤.[hù>.Ñü.¨zj{D"
+        Config().library_default().complete_config(),
+        "2mQvnz9Yevvb7DRCuyDltsP31vJLToR5pjE9orWkzHMUsht2kbC96PLbZ1sdIocsGHENrzC2n",
     )
-    res = res.decode("utf-8")
     assert res.lower() == answer_str.lower()
 
 
-@pytest.mark.skip(reason="This test appears to run infiniitely.")
 def test_base91():
     res = decrypt(
         Config().library_default().complete_config(),
-        """>OwJh>=/fV@$x88j9ZNKB*ge$yV%lE%ZKi,<d,TX2$0t,,cjPD@JY<UCHRWznuWoQPD""",
+        ">OwJh>=/fV@$x88j9ZNKB*ge$yV%lE%ZKi,<d,TX2$0t,,cjPD@JY<UCHRWznuWoQPD",
+    )
+    assert res.lower() == answer_str.lower()
+
+
+def test_decimal():
+    res = decrypt(
+        Config().library_default().complete_config(),
+        "72 101 108 108 111 32 109 121 32 110 97 109 101 32 105 115 32 98 101 101 32 97 110 100 32 73 32 108 105 107 101 32 100 111 103 32 97 110 100 32 97 112 112 108 101 32 97 110 100 32 116 114 101 101",
     )
     assert res.lower() == answer_str.lower()
 
+
 def test_base69():
     res = decrypt(
         Config().library_default().complete_config(),
         "kAZAtABBeB8A-AoB8ADBNAhBLA1AFBgA0AXBfBGATAVAFBgAwAWBHB<ACAkA-AnB0AVBnBNBDARAZBiBQAYAtAhBhABA<ArB4AbAMANBDAFAXBfBQAdAOAmArAUAAA2=",
     )
-    assert res == answer_str
\ No newline at end of file
+    assert res == answer_str
+
