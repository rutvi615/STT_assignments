@@ -3,6 +3,7 @@ import types
 from typing import Any, Callable, Optional
 
 from loguru import logger
+import re
 
 from ciphey.common import id_lambda
 from ciphey.iface import Decoder, registry
@@ -12,6 +13,8 @@ def _dispatch(self: Any, ctext: str, func: Callable[[str], bytes]) -> Optional[b
     logger.trace(f"Attempting {self.getTarget()}")
 
     try:
+        # remove all whitespace
+        ctext = re.sub(r"\s+", "", ctext, re.UNICODE)
         result = func(ctext)
         logger.debug(f"{self.getTarget()} successful, returning {result}")
         return result
