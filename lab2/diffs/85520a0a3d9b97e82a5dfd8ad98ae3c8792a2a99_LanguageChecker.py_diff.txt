@@ -19,7 +19,8 @@ Class to determine whether somethine is English or not.
         * The top 10,000 passwords
     If the word "Looks like" English (chi-squared) and if it contains English words, we can conclude it is
     very likely English. The alternative is doing the dictionary thing but with an entire 479k word dictionary (slower)
-    2.2. If the score is not English, but we haven't tested enough to create an average, then test it against the dictionary
+    2.2. If the score is not English, but we haven't tested enough to create an average, then test it against
+     the dictionary
 
 Things to optimise:
 * We only run the dictionary if it's 20% smaller than the average for chi squared
@@ -27,19 +28,22 @@ Things to optimise:
 * We run the dictionary if there is less than 10 total chisquared test
 
 How to add a language:
-* Download your desired dictionary. Try to make it the most popular words, for example. Place this file into this folder with languagename.txt
+* Download your desired dictionary. Try to make it the most popular words, for example. Place this file into this
+ folder with languagename.txt
 As an example, this comes built in with english.txt
 Find the statistical frequency of each letter in that language. 
 For English, we have:
 self.languages = {
     "English":
-    [0.0855, 0.0160, 0.0316, 0.0387, 0.1210,0.0218, 0.0209, 0.0496, 0.0733, 0.0022,0.0081, 0.0421, 0.0253, 0.0717, 0.0747,0.0207, 0.0010, 0.0633, 0.0673, 0.0894,0.0268, 0.0106, 0.0183, 0.0019, 0.0172,0.0011]
+    [0.0855, 0.0160, 0.0316, 0.0387, 0.1210,0.0218, 0.0209, 0.0496, 0.0733, 0.0022,0.0081, 0.0421, 0.0253, 0.0717,
+    0.0747,0.0207, 0.0010, 0.0633, 0.0673, 0.0894,0.0268, 0.0106, 0.0183, 0.0019, 0.0172,0.0011]
 }
 In chisquared.py
 To add your language, do:
 self.languages = {
     "English":
-    [0.0855, 0.0160, 0.0316, 0.0387, 0.1210,0.0218, 0.0209, 0.0496, 0.0733, 0.0022,0.0081, 0.0421, 0.0253, 0.0717, 0.0747,0.0207, 0.0010, 0.0633, 0.0673, 0.0894,0.0268, 0.0106, 0.0183, 0.0019, 0.0172,0.0011]
+    [0.0855, 0.0160, 0.0316, 0.0387, 0.1210,0.0218, 0.0209, 0.0496, 0.0733, 0.0022,0.0081, 0.0421, 0.0253, 0.0717,
+    0.0747,0.0207, 0.0010, 0.0633, 0.0673, 0.0894,0.0268, 0.0106, 0.0183, 0.0019, 0.0172,0.0011]
     "German": [0.0973]
 }   
 In alphabetical order
@@ -65,16 +69,38 @@ class LanguageChecker:
         self.chi = cs.chiSquared()
 
     def __add__(self, otherLanguageObject):
+        """Adds together 2 languageChecker objects
+
+
+        Args:
+            otherLanguageObject -> the other language checker mod
+
+        Returns:
+            A single languageCheckerObj comprised of 2
+
+        """
         # sets the added chi squared to be of this one
         new = otherLanguageObject.getChiSquaredObj() + self.getChiSquaredObj()
         self.chi = new
         return self
 
-    def checkLanguage(self, text):
+    def checkLanguage(self, text: str) -> bool:
+        """Checks to see if the text is in English
+        Uses chisqaured
+
+        Performs a decryption, but mainly parses the internal data packet and prints useful information.
+
+        Args:
+            text -> The text we use to perform analysis on
+
+        Returns:
+            bool -> True if the text is English, False otherwise.
+
+        """
         logger.debug(f"In Language Checker with {text}")
         if text == "":
             return False
-        result = self.chi.checkChi(text)
+        result: bool = self.chi.checkChi(text)
         if not result:
             logger.debug(
                 f"Chi squared failed. Attempting 1000 words"
@@ -88,7 +114,7 @@ class LanguageChecker:
         logger.debug(
             f"Language check phase 1 complete"
         )
-        result2 = self.dictionary.confirmlanguage(text, "english")
+        result2: bool = self.dictionary.confirmlanguage(text, "english")
         logger.debug(f"Result is, dictionary checker, is {result2}")
         if not result2:
             logger.debug(f"Language check phase 2 returns false")
@@ -97,7 +123,9 @@ class LanguageChecker:
 
 
     def getChiSquaredObj(self):
+        """Returns Chi squared object"""
         return self.chi
 
     def getChiScore(self):
+        """Returns Chi score"""
         return self.chi.totalChi
