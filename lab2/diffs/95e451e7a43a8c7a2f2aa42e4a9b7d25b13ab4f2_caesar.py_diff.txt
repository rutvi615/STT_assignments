@@ -8,6 +8,7 @@
 Github: brandonskerritt
 """
 
+
 class Caesar:
     def __init__(self, lc):
         self.lc = lc
@@ -21,7 +22,7 @@ class Caesar:
         # Example string
         message = message.lower()
         # Everything we can encrypt
-        SYMBOLS = 'abcdefghijklmnopqrstuvwxyz'
+        SYMBOLS = "abcdefghijklmnopqrstuvwxyz"
 
         for counter, key in enumerate(range(len(SYMBOLS))):
             # try again with each key attempt
@@ -45,6 +46,18 @@ class Caesar:
             # Output each attempt
             result = self.lc.checkLanguage(translated)
             if result:
-                return {"lc": self.lc, "IsPlaintext?": True, "Plaintext": translated, "Cipher": "Caesar", "Extra Information": f"The rotation used is {counter}"}
+                return {
+                    "lc": self.lc,
+                    "IsPlaintext?": True,
+                    "Plaintext": translated,
+                    "Cipher": "Caesar",
+                    "Extra Information": f"The rotation used is {counter}",
+                }
         # if none of them match English, return false!
-        return {"lc": self.lc, "IsPlaintext?": False, "Plaintext": None, "Cipher": "Caesar", "Extra Information": None}
+        return {
+            "lc": self.lc,
+            "IsPlaintext?": False,
+            "Plaintext": None,
+            "Cipher": "Caesar",
+            "Extra Information": None,
+        }
