@@ -2,7 +2,8 @@ from binascii import a2b_uu
 from codecs import decode
 from typing import Dict, Optional
 
-from loguru import logger
+import logging
+from rich.logging import RichHandler
 
 from ciphey.iface import Config, Decoder, ParamSpec, T, U, registry
 
@@ -17,7 +18,7 @@ class Uuencode(Decoder[str]):
         This function decodes the input string 'ctext' if it has been encoded using 'uuencoder'
         It will return None otherwise
         """
-        logger.trace("Attempting UUencode")
+        logging.debug("Attempting UUencode")
         result = ""
         try:
             # UUencoded messages may begin with prefix "begin" and end with suffix "end"
@@ -31,10 +32,10 @@ class Uuencode(Decoder[str]):
                 ctext_split = list(filter(None, ctext.splitlines()))
                 for _, value in enumerate(ctext_split):
                     result += a2b_uu(value).decode("utf-8")
-            logger.debug(f"UUencode successful, returning '{result}'")
+            logging.info(f"UUencode successful, returning '{result}'")
             return result
         except Exception:
-            logger.trace("Failed to decode UUencode")
+            logging.debug("Failed to decode UUencode")
             return None
 
     @staticmethod
