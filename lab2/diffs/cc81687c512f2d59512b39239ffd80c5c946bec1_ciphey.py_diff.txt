@@ -37,7 +37,9 @@ warnings.filterwarnings("ignore")
 
 def decrypt(config: iface.Config, ctext: Any) -> Union[str, bytes]:
     """A simple alias for searching a ctext and makes the answer pretty"""
-    res: iface.SearchResult = config.objs["searcher"].search(ctext)
+    res: Optional[iface.SearchResult] = config.objs["searcher"].search(ctext)
+    if res is None:
+        return "Failed to crack"
     if config.verbosity < 0:
         return res.path[-1].result.value
     else:
@@ -268,18 +270,15 @@ def main(**kwargs) -> Optional[dict]:
             # print("No inputs were given to Ciphey. For usage, run ciphey --help")
             return None
     # if debug mode is on, run without spinner
-    try:
-        if config.verbosity > 0:
+    if config.verbosity > 0:
+        result = decrypt(config, kwargs["text"])
+    elif config.verbosity == 0:
+        # else, run with spinner if verbosity is 0
+        with yaspin(Spinners.earth, text="Earth") as sp:
             result = decrypt(config, kwargs["text"])
-        elif config.verbosity == 0:
-            # else, run with spinner if verbosity is 0
-            with yaspin(Spinners.earth, text="Earth") as sp:
-                result = decrypt(config, kwargs["text"])
-        else:
-            # else its below 0, so quiet mode is on. make it greppable""
-            result = decrypt(config, kwargs["text"])
-    except LookupError as e:
-        result = "Could not find any solutions."
+    else:
+        # else its below 0, so quiet mode is on. make it greppable""
+        result = decrypt(config, kwargs["text"])
 
     print(result)
     return result
