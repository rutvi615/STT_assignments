@@ -7,21 +7,21 @@ from ciphey.iface import registry
 
 
 @registry.register
-class Octal(ciphey.iface.Decoder[bytes, str]):
+class Octal(ciphey.iface.Decoder[str, bytes]):
     @staticmethod
     def getTarget() -> str:
         return "octal"
 
-    def decode(self, text: bytes) -> Optional[str]:
+    def decode(self, text: str) -> Optional[bytes]:
         print("Attempting octal")
         """
         It takes an octal string and return a string
             :octal_str: octal str like "110 145 154"
         """
         logger.trace("Attempting Octal")
-        str_converted = ""
+        str_converted = bytes()
         for octal_char in text.split(" "):
-            str_converted += chr(int(octal_char, 8))
+            str_converted += int(octal_char, 8)
         logger.trace(f"Octal returns {str_converted}")
         return str_converted
 
@@ -29,10 +29,6 @@ class Octal(ciphey.iface.Decoder[bytes, str]):
     def getParams() -> Optional[Dict[str, Dict[str, Any]]]:
         pass
 
-    @staticmethod
-    def getName() -> str:
-        return "Octal"
-
     @staticmethod
     def priority() -> float:
         return 0.025
