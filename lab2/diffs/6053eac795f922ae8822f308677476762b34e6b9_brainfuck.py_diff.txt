@@ -2,7 +2,8 @@ import re
 import time
 from typing import Dict, Optional, Tuple
 
-from loguru import logger
+import logging
+from rich.logging import RichHandler
 
 from ciphey.iface import Config, Decoder, ParamSpec, T, U, WordList, registry
 
@@ -30,7 +31,7 @@ class Brainfuck(Decoder[str]):
             * The program starts with 100 memory cells, chosen arbitrarily
         """
 
-        logger.trace("Attempting brainfuck")
+        logging.debug("Attempting brainfuck")
 
         result = ""
         memory = [0] * 100
@@ -41,7 +42,7 @@ class Brainfuck(Decoder[str]):
 
         # If it doesn't appear to be valid brainfuck code
         if not isbf:
-            logger.trace("Failed to interpret brainfuck due to invalid characters")
+            logging.debug("Failed to interpret brainfuck due to invalid characters")
             return None
 
         # Get start time
@@ -53,7 +54,7 @@ class Brainfuck(Decoder[str]):
 
             # Return none if we've been running for over a minute
             if current - start > timelimit:
-                logger.trace("Failed to interpret brainfuck due to timing out")
+                logging.debug("Failed to interpret brainfuck due to timing out")
                 return None
 
             cmd = ctext[codeptr]
@@ -95,7 +96,7 @@ class Brainfuck(Decoder[str]):
 
             codeptr += 1
 
-        logger.debug(f"Brainfuck successful, returning '{result}'")
+        logging.info(f"Brainfuck successful, returning '{result}'")
         return result
 
     def bracemap_and_check(self, program: str) -> Tuple[Optional[Dict], bool]:
