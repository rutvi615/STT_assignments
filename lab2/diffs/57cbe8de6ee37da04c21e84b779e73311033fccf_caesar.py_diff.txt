@@ -16,6 +16,7 @@ import ciphey
 import cipheycore
 
 from ciphey.iface import ParamSpec, CrackResult, T, CrackInfo, registry
+from ciphey.common import fix_case
 
 @registry.register
 class Caesar(ciphey.iface.Cracker[str]):
@@ -75,12 +76,10 @@ class Caesar(ciphey.iface.Cracker[str]):
         for candidate in possible_keys:
             logger.trace(f"Candidate {candidate.key} has prob {candidate.p_value}")
             translated = cipheycore.caesar_decrypt(message, candidate.key, self.group)
-            candidates.append(CrackResult(value=translated, key_info=candidate.key))
+            candidates.append(CrackResult(value=fix_case(translated, ctext), key_info=candidate.key))
 
         return candidates
 
-
-
     @staticmethod
     def getParams() -> Optional[Dict[str, ParamSpec]]:
         return {
